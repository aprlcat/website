---
import Default from '../../../layouts/Default.astro';
import { render, getCollection } from 'astro:content';
import FormattedDate from '../../../components/FormattedDate.astro';
import Title from '../../../components/Title.astro';
import Article from '../../../components/Article.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => {
    return !data.draft && !data.archived;
  });

	const tags = new Set();

	for (const post of posts) {
		if (Array.isArray(post.data.tags)) {
			for (const tag of post.data.tags) {
				tags.add(tag);
			}
		}
  }

  return Array.from(tags).map((tag) => {
    const filteredPosts = posts.filter((post) => post.data.tags.includes(tag));

    return ({
      params: { slug: tag },
      props: { posts: filteredPosts },
    });
  });
}
type Props = CollectionEntry<'blog'>;

const tag = Astro.params.slug;
const { posts } = Astro.props;

const title = `Blog > ${tag}`
const description = "The parts of my life that I put out into the world";
---
<Default title={title} description={description}>
  <Title title={title} description={description} size="lg" />

  <div class="grid grid-cols-1 gap-4 mb-16">
    { posts.map((post, index) => (
      <Article id={post.id} {...post.data} />
    )) }
  </div>
</Default>
