---
import Default from '../../../layouts/Default.astro';
import { render, getCollection } from 'astro:content';
import FormattedDate from '../../../components/FormattedDate.astro';
import Title from '../../../components/Title.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');

	const tags = new Set();

	for (const post of posts) {
		if (Array.isArray(post.data.tags)) {
			for (const tag of post.data.tags) {
				tags.add(tag);
			}
		}
  }

  return Array.from(tags).map((tag) => {
    const filteredPosts = posts.filter((post) => post.data.tags.includes(tag));

    return ({
      params: { slug: tag },
      props: { posts: filteredPosts },
    });
  });
}
type Props = CollectionEntry<'blog'>;

const tag = Astro.params.slug;
const { posts } = Astro.props;

const title = `Blog > ${tag}`
const description = "The parts of my life that I put out into the world";
---
<Default title={title} description={description}>
  <Title title={title} description={description} size="lg" />

  <div class="grid grid-cols-1 gap-4 mb-16">
    { await Promise.all(posts.map(async (post, index) => {
      const { remarkPluginFrontmatter } = await render(post);

      return (
        <article class="ring-inset ring-1 ring-card bg-bg-lighter p-4 rounded-xl transition-all duration-200 ease-in-out hover:scale-105 lg:w-2xl md:w-xl">
          <a href={`/blog/${post.id}/`}>
            <Title title={post.data.title} description={post.data.description} size="xs" />

            <div class="flex flex-row gap-2">
              { post.data.tags.map((tag) => (
                <span class="pill">#{ tag }</span>
              )) }
            </div>

            <div class="text-xs text-fg-lighter flex flex-row gap-2 justify-end">
              <p>{ remarkPluginFrontmatter.minutesRead }</p>
              -
              <FormattedDate date={post.data.date} />
            </div>
          </a>
        </article>
      );
    })) }
  </div>
</Default>
